{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","$onInit","daysInMonth","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","format","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","selected","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","datePicker","Date","now","isObject","labelOk","okLabel","labelCancel","cancelLabel","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","multiple","parent","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","dateFormat","disabled","pre","constollers","$transclude","post","controllers","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","form","clone","append","model","isError","$invalid","$submitted","$formatters","unshift","$setValidity","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","on","$on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","timePicker","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = moment(this.minDate).add(1, 'days');\n        }\n    }\n\n    if (this.date) {\n        // check min date\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            this.date = moment(this.minDate);\n        }\n\n        // check max date\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            this.date = moment(this.maxDate);\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n    this.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date;\n\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            date = moment(this.minDate);\n        }\n\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            date = moment(this.maxDate);\n        }\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = DISPLAY_FORMAT;\n\n            var labelOk = options.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n\n                                '</div>' +\n\n                                '<div>' +\n\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = moment.localeData().firstDayOfWeek();\n        self.weekDays = [].concat(\n            moment.weekdaysMin().slice(self.dow),\n            moment.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n\n            angular.isDate(value) ||\n\n            !minDate.isValid() ||\n\n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n\n            angular.isDate(value) ||\n\n            !maxDate.isValid() ||\n\n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n\n            angular.isDate(value) ||\n\n            !angular.isFunction(filter) ||\n\n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, constollers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                   inputContainer.append(clone);\n\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || form.$submitted);\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    ngModel.$setValidity('required', date && date.isValid());\n                    if(date && date.isValid())\n\n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: scope.minDate,\n                        maxDate: scope.maxDate,\n                        dateFilter: scope.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev\n                    }).then(updateDate);\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var labelOk = options.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' +\n\n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: options.ampm\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n               inputContainer.append(clone);\n\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || form.$submitted);\n            };\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid())\n\n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"]}