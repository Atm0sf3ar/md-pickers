{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","time","autoSwitch","ampm","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","moment","hoursFormat","minutesFormat","clockHours","parseInt","format","clockMinutes","switchView","setAM","hours","hour","setPM","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","$onInit","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","i","push","selected","getPointerStyle","divider","degrees","Math","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","DatePickerCtrl","$timeout","currentDate","options","date","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","then","CalendarCtrl","daysInMonth","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","length","arr","value","enabled","isDayEnabled","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","e","off","$on","provider","LABEL_OK","LABEL_CANCEL","PARENT_GETTER","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","timePicker","Date","now","isObject","labelOk","okLabel","labelCancel","cancelLabel","show","clickOutsideToClose","targetEvent","locals","multiple","parent","$mdpTimePicker","require","transclude","noFloat","isDefined","mdpNoFloat","openOnClick","mdpOpenOnClick","mdpDisabled","timeFormat","placeholder","disabled","inputName","controllers","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","form","clone","append","model","isError","$invalid","$submitted","required","$error","setInvalid","Object","keys","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","dateFormat","pre","constollers","post","updateDate","$setValidity","month"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var labelOk = options.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' +\n\n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: options.ampm\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\",\n            \"inputName\": \"@?mdpInputName\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            scope.model = ngModel;\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || form.$submitted);\n            };\n\n            scope.required = function() {\n                return !!attrs.required;\n            };\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) {\n                    var strVal = time.format(scope.timeFormat);\n                    updateInputElement(strVal);\n                    return strVal;\n                } else {\n                    updateInputElement(null);\n                    return null;\n                }\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = moment(this.minDate).add(1, 'days');\n        }\n    }\n\n    if (this.date) {\n        // check min date\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            this.date = moment(this.minDate);\n        }\n\n        // check max date\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            this.date = moment(this.maxDate);\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n    this.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date;\n\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            date = moment(this.minDate);\n        }\n\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            date = moment(this.maxDate);\n        }\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = DISPLAY_FORMAT;\n\n            var labelOk = options.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n\n                                '</div>' +\n\n                                '<div>' +\n\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = moment.localeData().firstDayOfWeek();\n        self.weekDays = [].concat(\n            moment.weekdaysMin().slice(self.dow),\n            moment.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n\n            angular.isDate(value) ||\n\n            !minDate.isValid() ||\n\n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n\n            angular.isDate(value) ||\n\n            !maxDate.isValid() ||\n\n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n\n            angular.isDate(value) ||\n\n            !angular.isFunction(filter) ||\n\n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"inputName\": \"@?mdpInputName\"\n        },\n        link: {\n            pre: function(scope, element, attrs, constollers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                    inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || form.$submitted);\n                };\n\n                scope.required = function() {\n                    return !!attrs.required;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    ngModel.$setValidity('required', date && date.isValid());\n                    if(date && date.isValid()) {\n                        var strVal = date.format(scope.dateFormat);\n                        updateInputElement(strVal);\n                        return strVal;\n                    } else {\n                        updateInputElement(null);\n                        return null;\n                    }\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: scope.minDate,\n                        maxDate: scope.maxDate,\n                        dateFilter: scope.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev\n                    }).then(updateDate);\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n})();"]}