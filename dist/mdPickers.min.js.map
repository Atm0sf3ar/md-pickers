{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","time","autoSwitch","ampm","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","moment","hoursFormat","minutesFormat","clockHours","parseInt","format","clockMinutes","switchView","setAM","hours","hour","setPM","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","$onInit","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","i","push","selected","getPointerStyle","divider","degrees","Math","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","compareTimeValidator","value","otherTime","comparator","angular","isDate","date","isValid","minTimeValidator","minTime","mt","isSameOrAfter","maxTimeValidator","maxTime","isSameOrBefore","DatePickerCtrl","$timeout","currentDate","options","minDate","maxDate","displayFormat","dateFilter","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","then","CalendarCtrl","daysInMonth","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","length","arr","enabled","isDayEnabled","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","compareDateValidator","otherDate","minDateValidator","d","md","maxDateValidator","filterValidator","filter","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","factory","$mdpLocale","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","e","off","$on","provider","LABEL_OK","LABEL_CANCEL","PARENT_GETTER","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","timePicker","Date","now","isObject","labelOk","labelCancel","show","clickOutsideToClose","targetEvent","locals","isDefined","multiple","parent","$mdpTimePicker","require","transclude","mdpNoFloat","mdpOpenOnClick","mdpDisabled","placeholder","disabled","inputName","controllers","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","form","opts","clone","append","undefined","model","isError","$invalid","$submitted","required","$error","setInvalid","Object","keys","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","error","$validate","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","pre","constollers","post","updateDate","month"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    var $mdpLocale = {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: false,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: true,\n            clearOnCancel: false\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: false,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n\n    return $mdpLocale;\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var labelOk = options.okLabel || $mdpLocale.time.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' +\n\n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nfunction compareTimeValidator(value, format, otherTime, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherTime)) {\n        otherTime = moment(otherTime).format(format);\n    }\n    otherTime = moment(otherTime, format, true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherTime.isValid() ||\n            comparator(date, otherTime);\n}\n\nfunction minTimeValidator(value, format, minTime) {\n    return compareTimeValidator(value, format, minTime, function(t, mt) { return t.isSameOrAfter(mt); });\n}\n\nfunction maxTimeValidator(value, format, maxTime) {\n    return compareTimeValidator(value, format, maxTime, function(t, mt) { return t.isSameOrBefore(mt); });\n}\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", \"$mdpLocale\", function($mdpTimePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.time.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minTime\": \"=?mdpMinTime\",\n            \"maxTime\": \"=?mdpMaxTime\",\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var opts = {\n                get minTime() {\n                    return scope.minTime || $mdpLocale.time.minTime;\n                },\n                get maxTime() {\n                    return scope.maxTime || $mdpLocale.time.maxTime;\n                },\n                get clearOnCancel() {\n                    return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n                }\n            };\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n            scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n            scope.model = ngModel;\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n            };\n\n            scope.required = function() {\n                return !!attrs.required;\n            };\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) {\n                    var strVal = time.format(scope.timeFormat);\n                    updateInputElement(strVal);\n                    return strVal;\n                } else {\n                    updateInputElement(null);\n                    return null;\n                }\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$validators.minTime = function(modelValue, viewValue) {\n                return minTimeValidator(viewValue, scope.timeFormat, opts.minTime);\n            };\n\n            ngModel.$validators.maxTime = function(modelValue, viewValue) {\n                return maxTimeValidator(viewValue, scope.timeFormat, opts.maxTime);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    updateTime(time, true);\n                }, function (error) {\n                    if (opts.clearOnCancel) {\n                        updateTime(null, true);\n                    }\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            });\n\n            // revalidate on constraint change\n            scope.$watch(\"minTime + maxTime\", function() {\n                ngModel.$validate();\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = moment(this.minDate).add(1, 'days');\n        }\n    }\n\n    if (this.date) {\n        // check min date\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            this.date = moment(this.minDate);\n        }\n\n        // check max date\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            this.date = moment(this.maxDate);\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n    this.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date;\n\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            date = moment(this.minDate);\n        }\n\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            date = moment(this.maxDate);\n        }\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n\n            var labelOk = options.okLabel || $mdpLocale.date.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n\n                                '</div>' +\n\n                                '<div>' +\n\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = moment.localeData().firstDayOfWeek();\n        self.weekDays = [].concat(\n            moment.weekdaysMin().slice(self.dow),\n            moment.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction compareDateValidator(value, format, otherDate, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherDate)) {\n        otherDate = moment(otherDate).format(format);\n    }\n    otherDate = moment(otherDate, format, true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherDate.isValid() ||\n            comparator(date, otherDate);\n}\n\nfunction minDateValidator(value, format, minDate) {\n    return compareDateValidator(value, format, minDate, function(d, md) { return d.isSameOrAfter(md); });\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    return compareDateValidator(value, format, maxDate, function(d, md) { return d.isSameOrBefore(md); });\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            !filter(date.toDate());\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", \"$mdpLocale\", function($mdpDatePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.date.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: {\n            pre: function(scope, element, attrs, constollers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var opts = {\n                    get minDate() {\n                        return scope.minDate || $mdpLocale.date.minDate;\n                    },\n                    get maxDate() {\n                        return scope.maxDate || $mdpLocale.date.maxDate;\n                    },\n                    get dateFilter() {\n                        return scope.dateFilter || $mdpLocale.date.dateFilter;\n                    },\n                    get clearOnCancel() {\n                        return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n                    }\n                };\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                    inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat || $mdpLocale.date.dateFormat ? \"text\" : \"date\";\n                scope.dateFormat = scope.dateFormat || $mdpLocale.date.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n                };\n\n                scope.required = function() {\n                    return !!attrs.required;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) {\n                        var strVal = date.format(scope.dateFormat);\n                        updateInputElement(strVal);\n                        return strVal;\n                    } else {\n                        updateInputElement(null);\n                        return null;\n                    }\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, opts.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, opts.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, opts.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: opts.minDate,\n                        maxDate: opts.maxDate,\n                        dateFilter: opts.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev\n                    }).then(function(time) {\n                        updateDate(time, true);\n                    }, function (error) {\n                        if (opts.clearOnCancel) {\n                            updateDate(null, true);\n                        }\n                    });\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n\n                // revalidate on constraint change\n                scope.$watch(\"minDate + maxDate\", function() {\n                    ngModel.$validate();\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n})();"]}